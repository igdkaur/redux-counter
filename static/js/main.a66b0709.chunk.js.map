{"version":3,"sources":["components/Header.module.css","components/UserProfile.module.css","store/counter.js","components/Counter.js","store/auth.js","components/Auth.js","components/Header.js","components/UserProfile.js","App.js","store/index.js","index.js","components/Auth.module.css","components/Counter.module.css"],"names":["module","exports","counterSlice","createSlice","name","initialState","counter","showCounter","reducers","increment","state","decrement","increase","action","payload","toggle","counterActions","actions","Counter","dispatch","useDispatch","useSelector","show","className","classes","value","onClick","authSlice","isAuthenticated","login","logout","authActions","Auth","auth","onSubmit","event","preventDefault","control","htmlFor","type","id","Header","isAuth","header","href","UserProfile","profile","App","store","configureStore","reducer","counterReducer","authReducer","ReactDOM","render","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,QAAU,+B,6HCOtBC,EAAeC,YAAY,CAC/BC,KAAM,UACNC,aAP0B,CAC1BC,QAAS,EACTC,aAAa,GAMbC,SAAU,CACRC,UADQ,SACEC,GACRA,EAAMJ,WAERK,UAJQ,SAIED,GACRA,EAAMJ,WAERM,SAPQ,SAOCF,EAAOG,GACdH,EAAMJ,QAAUI,EAAMJ,QAAUO,EAAOC,SAEzCC,OAVQ,SAUDL,GACLA,EAAMH,aAAeG,EAAMH,gBAMpBS,EAAiBd,EAAae,QAE5Bf,IAAf,Q,OCOegB,EAjCC,WACd,IAAMC,EAAWC,cACXd,EAAUe,aAAY,SAACX,GAAD,OAAWA,EAAMJ,QAAQA,WAC/CgB,EAAOD,aAAY,SAACX,GAAD,OAAWA,EAAMJ,QAAQC,eAkBlD,OACE,uBAAMgB,UAAWC,IAAQlB,QAAzB,UACE,+CACCgB,GAAQ,sBAAKC,UAAWC,IAAQC,MAAxB,UAAgCnB,EAAhC,OACT,wBAAQoB,QApBa,WACvBP,EAASH,EAAeP,cAmBtB,uBACA,wBAAQiB,QAjBY,WACtBP,EAASH,EAAeJ,SAAS,MAgB/B,sBACA,wBAAQc,QAda,WACvBP,EAASH,EAAeL,cAatB,uBACA,wBAAQe,QAXiB,WAC3BP,EAASH,EAAeD,WAUtB,gC,gBC3BAY,EAAYxB,YAAY,CAC5BC,KAAO,iBACPC,aAJuB,CAAEuB,iBAAmB,GAK5CpB,SAAW,CACTqB,MADS,SACHnB,GAAQA,EAAMkB,iBAAkB,GACtCE,OAFS,SAEFpB,GAAQA,EAAMkB,iBAAkB,MAK9BG,EAAcJ,EAAUV,QACtBU,IAAf,QCeeK,EA3BF,WACX,IAAMb,EAAWC,cAOjB,OACE,sBAAMG,UAAWC,IAAQS,KAAzB,SACE,kCACE,uBAAMC,SARS,SAACC,GACpBA,EAAMC,iBACNjB,EAASY,EAAYF,UAMjB,UACE,sBAAKN,UAAWC,IAAQa,QAAxB,UACE,uBAAOC,QAAQ,QAAf,mBACA,uBAAOC,KAAK,QAAQC,GAAG,aAEzB,sBAAKjB,UAAWC,IAAQa,QAAxB,UACE,uBAAOC,QAAQ,WAAf,sBACA,uBAAOC,KAAK,WAAWC,GAAG,gBAE5B,mD,iBCSKC,EA5BA,WACb,IAAMC,EAASrB,aAAY,SAAAX,GAAK,OAAIA,EAAMuB,KAAKL,mBACzCT,EAAWC,cAMjB,OACE,yBAAQG,UAAWC,IAAQmB,OAA3B,UACE,4CACED,GAAU,8BACV,+BACE,6BACE,mBAAGE,KAAK,IAAR,2BAEF,6BACE,mBAAGA,KAAK,IAAR,wBAEF,6BACE,wBAAQlB,QAhBG,WACnBP,EAAUY,EAAYD,WAed,+B,iBCfGe,EARK,WAClB,OACE,sBAAMtB,UAAWC,IAAQsB,QAAzB,SACE,oDCkBSC,MAdf,WAEE,IAAML,EAASrB,aAAY,SAAAX,GAAK,OAAIA,EAAMuB,KAAKL,mBAC/C,OACE,eAAC,WAAD,WACG,cAAC,EAAD,IACCc,GAAU,cAAC,EAAD,KACVA,GAAU,cAAC,EAAD,IACXA,GAAU,cAAC,EAAD,QCCFM,EALDC,YAAe,CAC3BC,QAAS,CAAE5C,QAAS6C,EAAiBlB,KAAOmB,KCN9CC,IAASC,OAAO,eAAC,IAAD,CAAUN,MAASA,EAAnB,cAA2B,cAAC,EAAD,IAA3B,OAAgDO,SAASC,eAAe,U,kBCPxFxD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,wB,kBCAtDD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.a66b0709.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3mObx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__1BiAu\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true,\n};\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState:initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\n// export default counterSlice;\nexport const counterActions = counterSlice.actions;\n\nexport default counterSlice.reducer;","import classes from \"./Counter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { counterActions } from \"../store/counter\";\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector((state) => state.counter.counter);\n  const show = useSelector((state) => state.counter.showCounter);\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(10)); // passsing payload here\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggle());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter} </div>}\n      <button onClick={incrementHandler}>Increment</button>\n      <button onClick={increaseHandler}>Increase</button>\n      <button onClick={decrementHandler}>Decrement</button>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst initialAuthState = { isAuthenticated :  false };\n\nconst authSlice = createSlice({\n  name : 'authentication',\n  initialState: initialAuthState,\n  reducers : {\n    login(state) {state.isAuthenticated = true;},\n    logout(state) {state.isAuthenticated = false;}\n  }\n})\n\n// export default authSlice;\nexport const authActions = authSlice.actions;\nexport default authSlice.reducer;","import classes from './Auth.module.css';\nimport { authActions } from '../store/auth';\nimport { useDispatch } from 'react-redux';\n\nconst Auth = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(authActions.login()); \n  }\n\n  return (\n    <main className={classes.auth}>\n      <section>\n        <form onSubmit = {handleSubmit}>\n          <div className={classes.control}>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' />\n          </div>\n          <button>Login</button>\n        </form>\n      </section>\n    </main>\n  );\n};\n\nexport default Auth;\n","import classes from './Header.module.css';\nimport {useSelector,useDispatch} from 'react-redux'\nimport { authActions } from '../store/auth';\n\n\nconst Header = () => {\n  const isAuth = useSelector(state => state.auth.isAuthenticated);\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch (authActions.logout())\n  }\n\n  return (\n    <header className={classes.header}>\n      <h1>Redux Auth</h1>\n      { isAuth && <nav>\n        <ul>\n          <li>\n            <a href='/'>My Products</a>\n          </li>\n          <li>\n            <a href='/'>My Sales</a>\n          </li>\n          <li>\n            <button onClick = {handleLogout}>Logout</button>\n          </li>\n        </ul>\n      </nav>}\n    </header>\n  );\n};\n\nexport default Header;\n","import classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <main className={classes.profile}>\n      <h2>My User Profile</h2>\n    </main>\n  );\n};\n\nexport default UserProfile;\n","import Counter from './components/Counter';\nimport Auth  from './components/Auth'\nimport Header  from './components/Header'\nimport {Fragment} from 'react'\nimport {useSelector} from 'react-redux'\nimport UserProfile from './components/UserProfile'\n\n\n\nfunction App() {\n\n  const isAuth = useSelector(state => state.auth.isAuthenticated);\n  return (\n    <Fragment>\n       <Header/>\n       {isAuth && <UserProfile/>}\n      {!isAuth && <Auth/>} \n      {isAuth && <Counter/>}\n      \n    </Fragment>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport counterReducer from './counter';\nimport authReducer from './auth'\n\n// const store = createStore(counterSlice.reducer);\n\n// const store = configureStore({\n//   reducer: counterSlice.reducer\n// })\n\n\n\nconst store = configureStore({\n  reducer: { counter: counterReducer , auth : authReducer },\n});\n\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store/index'\n\nReactDOM.render(<Provider store = {store}> <App /> </Provider>, document.getElementById('root') );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__3QLaR\",\"control\":\"Auth_control__3bkp4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__1U4hj\",\"value\":\"Counter_value__2JpT-\"};"],"sourceRoot":""}