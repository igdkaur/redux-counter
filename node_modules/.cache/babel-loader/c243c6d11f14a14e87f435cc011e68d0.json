{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst authState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  authState: {\n    isAuthenticated: false\n  },\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n}); // const store = createStore(counterSlice.reducer);\n// const store = configureStore({\n//   reducer: counterSlice.reducer\n// })\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/m/Home/Work/Personal-Projects/redux-counter/src/store/index.js"],"names":["createStore","createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggle","authState","isAuthenticated","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAKA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BJ,EAAAA,YAF+B;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KAHO;;AAIRO,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KANO;;AAORQ,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,OAAvC;AACD,KATO;;AAURC,IAAAA,MAAM,CAACL,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAoBA,MAAMW,SAAS,GAAG;AAAEC,EAAAA,eAAe,EAAI;AAArB,CAAlB;AAEA,MAAMC,SAAS,GAAGjB,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAG,gBADqB;AAE5BS,EAAAA,SAAS,EAAG;AAAEC,IAAAA,eAAe,EAAI;AAArB,GAFgB;AAG5BT,EAAAA,QAAQ,EAAG;AACTW,IAAAA,KAAK,CAACT,KAAD,EAAQ;AAACA,MAAAA,KAAK,CAACO,eAAN,GAAwB,IAAxB;AAA8B,KADnC;;AAETG,IAAAA,MAAM,CAACV,KAAD,EAAQ;AAACA,MAAAA,KAAK,CAACO,eAAN,GAAwB,KAAxB;AAA+B;;AAFrC;AAHiB,CAAD,CAA7B,C,CASA;AAEA;AACA;AACA;;AAIA,MAAMI,KAAK,GAAGnB,cAAc,CAAC;AAC3BoB,EAAAA,OAAO,EAAE;AAAElB,IAAAA,OAAO,EAAEE,YAAY,CAACgB,OAAxB;AAAmCC,IAAAA,IAAI,EAAGL,SAAS,CAACI;AAApD;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAME,cAAc,GAAGlB,YAAY,CAACmB,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAA9B;AAEP,eAAeJ,KAAf","sourcesContent":["import { createStore } from 'redux'\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  counter: 0,\n  showCounter: true,\n};\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\n\nconst authState = { isAuthenticated :  false };\n\nconst authSlice = createSlice({\n  name : 'authentication',\n  authState : { isAuthenticated :  false },\n  reducers : {\n    login(state) {state.isAuthenticated = true;},\n    logout(state) {state.isAuthenticated = false;}\n  }\n})\n\n// const store = createStore(counterSlice.reducer);\n\n// const store = configureStore({\n//   reducer: counterSlice.reducer\n// })\n\n\n\nconst store = configureStore({\n  reducer: { counter: counterSlice.reducer  , auth : authSlice.reducer},\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}